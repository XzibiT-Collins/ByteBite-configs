spring.application.name=restaurant-service

server.port=8040

#JWT
jwt.secret=${JWT_SECRET}


#Eureka discovery
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

# Database connection
spring.datasource.url=jdbc:mysql://localhost:3306/restaurant_db
spring.datasource.username=root
spring.datasource.password=collinsxzibit1?
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#Kafka Configurations
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=restaurant-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.properties.spring.json.trusted.packages=com.example.restaurant_service.dto.restaurantDto.kafkaMessageDto.OrderRequest


# Swagger settings in each microservice
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Resilience4j
resilience4j.circuitbreaker.instances.userClient.slidingWindowSize=5
resilience4j.circuitbreaker.instances.userClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userClient.waitDurationInOpenState=10s
permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.userClient.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userClient.automaticTransitionFromOpenToHalfOpenEnabled=true
